@description('The location of the resources.')
param location string = 'francecentral'

@description('The name of the resource group.')
param resourceGroupName string = 'PERSO_SIEF'

@description('The username for the virtual machine and MariaDB server.')
param adminUsername string = 'skadminadminlogin'

@description('The password for the virtual machine and MariaDB server.')
param adminPassword string = 'skpassadminpass'

var virtualNetworkName = 'skVNET'
var subnetName = 'skSubnet'
var networkInterfaceName = 'skNIC'
var virtualMachineName = 'skVM'
var mariadbServerName = 'skMariaDB'
var appServicePlanName = 'skASP'
var webAppName1 = 'skWebApp1'
var webAppName2 = 'skWebApp2'
var storageAccountName = 'skstorageaccount${uniqueString(resourceGroupName)}'
var applicationInsightsName1 = 'skAppInsights1'
var applicationInsightsName2 = 'skAppInsights2'
var loadBalancerName = 'skLoadBalancer'
var publicIpName = 'skPublicIP'

resource virtualNetwork 'Microsoft.Network/virtualNetworks@2020-06-01' = {
  name: virtualNetworkName
  location: location
  properties: {
    addressSpace: {
      addressPrefixes: [
        '10.0.0.0/16'
      ]
    }
  }
}

resource subnet 'Microsoft.Network/virtualNetworks/subnets@2020-06-01' = {
  parent: virtualNetwork
  name: subnetName
  properties: {
    addressPrefix: '10.0.1.0/24'
  }
}

resource networkInterface 'Microsoft.Network/networkInterfaces@2020-06-01' = {
  name: networkInterfaceName
  location: location
  properties: {
    ipConfigurations: [
      {
        name: 'internal'
        properties: {
          privateIPAllocationMethod: 'Dynamic'
          subnet: {
            id: subnet.id
          }
        }
      }
    ]
  }
}

resource virtualMachine 'Microsoft.Compute/virtualMachines@2020-06-01' = {
  name: virtualMachineName
  location: location
  properties: {
    hardwareProfile: {
      vmSize: 'Standard_B1s'
    }
    storageProfile: {
      osDisk: {
        createOption: 'FromImage'
        managedDisk: {
          storageAccountType: 'Standard_LRS'
        }
      }
      imageReference: {
        publisher: 'Canonical'
        offer: 'UbuntuServer'
        sku: '18.04-LTS'
        version: 'latest'
      }
    }
    osProfile: {
      computerName: virtualMachineName
      adminUsername: adminUsername
      adminPassword: adminPassword
    }
    networkProfile: {
      networkInterfaces:[
        {
          id : networkInterface.id
        }
      ]
    }
  }
}

resource mariadbServer 'Microsoft.DBforMariaDB/servers@2018-06-01' = {
  name : mariadbServerName
  location : location
  properties :{
    administratorLogin : adminUsername
    administratorLoginPassword : adminPassword
    version : '10.3'
    sslEnforcement : 'Enabled'
    storageProfile :{
      storageMB : 5120
      backupRetentionDays : 7
      geoRedundantBackup : 'Disabled'
    }
    createMode : 'Default'
  }
  sku :{
    name : 'B_Gen5_2'
    tier : 'Basic'
    capacity : 2
    size : null
    family : null
  }
}

resource appServicePlan 'Microsoft.Web/serverfarms@2021-02-01' = {
   name                : appServicePlanName
   location            : location

   sku:{
     tier     :"Standard"
     size     :"S1"
     capacity :"2"
   }

   kind:"app"
}

resource webApp1 'Microsoft.Web/sites@2021-02-01' ={
   name                : webAppName1
   location            : location

   properties:{
     serverFarmId       : appServicePlan.id

     siteConfig:{
       alwaysOn         : true
       dotnetFrameworkVersion:"v4.0"
       scmType          :"LocalGit"

     }

   }

}

resource webApp2 'Microsoft.Web/sites@2021-02-01' ={
   name                : webAppName2
   location            : location

   properties:{
     serverFarmId       : appServicePlan.id

     siteConfig:{
       alwaysOn         : true
       dotnetFrameworkVersion:"v4.0"
       scmType          :"LocalGit"

     }

   }

}

resource storageAccount 'Microsoft.Storage/storageAccounts@2021-04-01' ={
   name                     : storageAccountName
   location                 : location

   sku:{
     name                   :"Standard_GRS"
   }

   kind:"StorageV2"
}

resource applicationInsights1 'Microsoft.Insights/components@2020-02-02-preview'={
  name: applicationInsightsName1
  location: location
  kind: 'web'
  properties: {
    Application_Type: 'web'
  }
}

resource applicationInsights2 'Microsoft.Insights/components@2020-02-02-preview'={
  name: applicationInsightsName2
  location: location
  kind: 'web'
  properties: {
    Application_Type: 'web'
  }
}

resource publicIp 'Microsoft.Network/publicIPAddresses@2020-06-01' = {
  name: publicIpName
  location: location
  sku:{
    name:'Standard'
  }
  properties:{
    publicIPAllocationMethod:'Static'
  }
}

resource loadBalancer 'Microsoft.Network/loadBalancers@2020-06-01' = {
  name: loadBalancerName
  location: location
  properties:{
    frontendIPConfigurations:[
      {
        name:'LoadBalancerFrontEnd'
        properties:{
          publicIPAddress:{
            id:publicIp.id
          }
        }
      }
    ]
    backendAddressPools:[
      {
        name:'BackEndAddressPool'
      }
    ]
    probes:[
      {
        name:'httpProbe'
        properties:{
          protocol:'Http'
          port:80
          requestPath:'/'
        }
      }
    ]
    loadBalancingRules:[
      {
        name:'httpRule'
        properties:{
          frontendIPConfiguration:{
            id:'${loadBalancer.id}/frontendIPConfigurations/LoadBalancerFrontEnd'
          }
          backendAddressPool:{
            id:'${loadBalancer.id}/backendAddressPools/BackEndAddressPool'
          }
          probe:{
            id:'${loadBalancer.id}/probes/httpProbe'
          }
          protocol:'Tcp'
          frontendPort:80
          backendPort:80
        }
      }
    ]
  }
}
